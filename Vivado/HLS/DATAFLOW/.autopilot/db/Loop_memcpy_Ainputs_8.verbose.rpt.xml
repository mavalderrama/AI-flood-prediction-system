<profile>

<section name = "Vivado HLS Report for 'Loop_memcpy_Ainputs_8'" level="0">
<item name = "Date">Sat May 12 21:19:59 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">ANN</item>
<item name = "Solution">DATAFLOW</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z010clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.75, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">12, 12, 12, 12, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- memcpy.Ainputs.addr.inputs.V">4, 4, 3, 1, 1, 3, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 66</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, -, -</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 128</column>
<column name="Register">-, -, 54, -</column>
<specialColumn name="Available">120, 80, 35200, 17600</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, 1</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="indvar_next_i_i_fu_165_p2">+, 0, 0, 10, 2, 1</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state9_pp0_stage0_iter1">and, 0, 0, 8, 1, 1</column>
<column name="ap_condition_279">and, 0, 0, 8, 1, 1</column>
<column name="exitcond3_i_i_fu_159_p2">icmp, 0, 0, 8, 2, 2</column>
<column name="ap_block_state1">or, 0, 0, 8, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 8, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">47, 10, 1, 10</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_phi_mux_indvar_i_i_phi_fu_130_p4">9, 2, 2, 4</column>
<column name="ap_sig_ioackin_m_axi_inputs_V_ARREADY">9, 2, 1, 2</column>
<column name="indvar_i_i_reg_126">9, 2, 2, 4</column>
<column name="inputs_V_blk_n_AR">9, 2, 1, 2</column>
<column name="inputs_V_blk_n_R">9, 2, 1, 2</column>
<column name="result_V_out_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">9, 0, 9, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_inputs_V_ARREADY">1, 0, 1, 0</column>
<column name="ap_reg_pp0_iter1_exitcond3_i_i_reg_182">1, 0, 1, 0</column>
<column name="ap_reg_pp0_iter1_indvar_i_i_reg_126">2, 0, 2, 0</column>
<column name="exitcond3_i_i_reg_182">1, 0, 1, 0</column>
<column name="indvar_i_i_reg_126">2, 0, 2, 0</column>
<column name="indvar_next_i_i_reg_186">2, 0, 2, 0</column>
<column name="inputs_V_addr_read_reg_191">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, Loop_memcpy.Ainputs.8, return value</column>
<column name="m_axi_inputs_V_AWVALID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWREADY">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWADDR">out, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWLEN">out, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWSIZE">out, 3, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWBURST">out, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWLOCK">out, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWCACHE">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWPROT">out, 3, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWQOS">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWREGION">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_AWUSER">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WVALID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WREADY">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WDATA">out, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WSTRB">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WLAST">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_WUSER">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARVALID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARREADY">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARADDR">out, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARID">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARLEN">out, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARSIZE">out, 3, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARBURST">out, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARLOCK">out, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARCACHE">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARPROT">out, 3, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARQOS">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARREGION">out, 4, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_ARUSER">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RVALID">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RREADY">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RDATA">in, 32, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RLAST">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RID">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RUSER">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_RRESP">in, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_BVALID">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_BREADY">out, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_BRESP">in, 2, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_BID">in, 1, m_axi, inputs_V, pointer</column>
<column name="m_axi_inputs_V_BUSER">in, 1, m_axi, inputs_V, pointer</column>
<column name="inputs_V_offset">in, 32, ap_none, inputs_V_offset, scalar</column>
<column name="Ainputs_address0">out, 2, ap_memory, Ainputs, array</column>
<column name="Ainputs_ce0">out, 1, ap_memory, Ainputs, array</column>
<column name="Ainputs_we0">out, 1, ap_memory, Ainputs, array</column>
<column name="Ainputs_d0">out, 32, ap_memory, Ainputs, array</column>
<column name="result_V">in, 32, ap_none, result_V, scalar</column>
<column name="result_V_out_din">out, 32, ap_fifo, result_V_out, pointer</column>
<column name="result_V_out_full_n">in, 1, ap_fifo, result_V_out, pointer</column>
<column name="result_V_out_write">out, 1, ap_fifo, result_V_out, pointer</column>
</table>
</item>
</section>
</profile>
