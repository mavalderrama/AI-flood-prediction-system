<profile>

<section name = "Vivado HLS Report for 'Loop_neuronLoop_proc'" level="0">
<item name = "Date">Sat May 12 21:19:59 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">ANN</item>
<item name = "Solution">DATAFLOW</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z010clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.75, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">70, 78, 70, 78, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- neuronLoop">48, 54, 16 ~ 18, -, -, 3, no</column>
<column name=" + resultNeuronLoop1">12, 12, 4, -, -, 3, no</column>
<column name="- resultNeuronLoop2">12, 12, 4, -, -, 3, no</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, 12, 0, 754</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, -, -</column>
<column name="Memory">6, -, 52, 2</column>
<column name="Multiplexer">-, -, -, 323</column>
<column name="Register">-, -, 822, -</column>
<specialColumn name="Available">120, 80, 35200, 17600</specialColumn>
<specialColumn name="Utilization (%)">5, 15, 2, 6</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="coeTanSig_V_U">Loop_neuronLoop_pbkb, 6, 0, 0, 4096, 25, 1, 102400</column>
<column name="layerResult_V_U">Loop_neuronLoop_pcud, 0, 52, 2, 3, 26, 1, 78</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="p_Val2_2_fu_674_p2">*, 3, 0, 20, 32, 26</column>
<column name="p_Val2_6_fu_476_p2">*, 3, 0, 20, 32, 32</column>
<column name="r_V_4_fu_583_p2">*, 3, 0, 20, 32, 28</column>
<column name="r_V_5_fu_781_p2">*, 3, 0, 20, 32, 28</column>
<column name="i_1_fu_445_p2">+, 0, 0, 10, 2, 1</column>
<column name="i_fu_656_p2">+, 0, 0, 10, 2, 1</column>
<column name="neuronIndex_fu_406_p2">+, 0, 0, 10, 2, 1</column>
<column name="r_V_2_fu_574_p2">+, 0, 0, 28, 28, 28</column>
<column name="r_V_fu_772_p2">+, 0, 0, 28, 28, 28</column>
<column name="ret_V_1_fu_618_p2">+, 0, 0, 20, 1, 13</column>
<column name="ret_V_fu_816_p2">+, 0, 0, 20, 1, 13</column>
<column name="tmp1_i_fu_568_p2">+, 0, 0, 28, 27, 28</column>
<column name="tmp2_i_fu_766_p2">+, 0, 0, 28, 27, 28</column>
<column name="tmpCalc_V_1_fu_734_p2">+, 0, 0, 28, 32, 32</column>
<column name="tmpCalc_V_3_fu_536_p2">+, 0, 0, 28, 32, 32</column>
<column name="tmpCalc_V_4_fu_748_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmpCalc_V_fu_550_p2">+, 0, 0, 39, 32, 32</column>
<column name="tmp_17_i_fu_729_p2">+, 0, 0, 28, 32, 32</column>
<column name="tmp_20_i_fu_531_p2">+, 0, 0, 28, 32, 32</column>
<column name="tmp_24_i_fu_460_p2">+, 0, 0, 15, 5, 5</column>
<column name="tmp_23_i_fu_433_p2">-, 0, 0, 15, 5, 5</column>
<column name="qb_assign_1_i_fu_719_p2">and, 0, 0, 8, 1, 1</column>
<column name="qb_assign_3_i_fu_521_p2">and, 0, 0, 8, 1, 1</column>
<column name="exitcond1_i_fu_400_p2">icmp, 0, 0, 8, 2, 2</column>
<column name="exitcond2_i_fu_439_p2">icmp, 0, 0, 8, 2, 2</column>
<column name="exitcond_i_fu_650_p2">icmp, 0, 0, 8, 2, 2</column>
<column name="r_1_fu_503_p2">icmp, 0, 0, 18, 23, 1</column>
<column name="r_fu_701_p2">icmp, 0, 0, 18, 23, 1</column>
<column name="tmp_10_i_fu_562_p2">icmp, 0, 0, 18, 32, 28</column>
<column name="tmp_11_i_fu_811_p2">icmp, 0, 0, 24, 48, 1</column>
<column name="tmp_13_i_fu_613_p2">icmp, 0, 0, 24, 48, 1</column>
<column name="tmp_3_i_fu_760_p2">icmp, 0, 0, 18, 32, 28</column>
<column name="tmp_4_i_fu_556_p2">icmp, 0, 0, 18, 32, 27</column>
<column name="tmp_i_39_fu_754_p2">icmp, 0, 0, 18, 32, 27</column>
<column name="ap_block_state1">or, 0, 0, 8, 1, 1</column>
<column name="r_i_i1_i_fu_515_p2">or, 0, 0, 8, 1, 1</column>
<column name="r_i_i_i_fu_713_p2">or, 0, 0, 8, 1, 1</column>
<column name="p_1_i_fu_822_p3">select, 0, 0, 13, 1, 13</column>
<column name="p_2_i_fu_830_p3">select, 0, 0, 13, 1, 13</column>
<column name="p_3_i_fu_632_p3">select, 0, 0, 13, 1, 13</column>
<column name="p_i_fu_624_p3">select, 0, 0, 13, 1, 13</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">117, 25, 1, 25</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_m_axi_result_V_AWREADY">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_m_axi_result_V_WREADY">9, 2, 1, 2</column>
<column name="coeTanSig_V_address0">15, 3, 12, 36</column>
<column name="i2_i_reg_354">9, 2, 2, 4</column>
<column name="i_i_reg_331">9, 2, 2, 4</column>
<column name="layerResult_V_address0">41, 8, 2, 16</column>
<column name="layerResult_V_d0">27, 5, 26, 130</column>
<column name="layerResult_V_gep_i_reg_365">15, 3, 26, 78</column>
<column name="neuronIndex_i_reg_308">9, 2, 2, 4</column>
<column name="p_Val2_4_reg_319">9, 2, 32, 64</column>
<column name="p_Val2_s_reg_342">9, 2, 32, 64</column>
<column name="result_V_blk_n_AW">9, 2, 1, 2</column>
<column name="result_V_blk_n_B">9, 2, 1, 2</column>
<column name="result_V_blk_n_W">9, 2, 1, 2</column>
<column name="result_V_offset_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="Ainputs_load_reg_907">32, 0, 32, 0</column>
<column name="ap_CS_fsm">24, 0, 24, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_result_V_AWREADY">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_result_V_WREADY">1, 0, 1, 0</column>
<column name="bias_V_addr_reg_874">2, 0, 2, 0</column>
<column name="i2_i_reg_354">2, 0, 2, 0</column>
<column name="i_1_reg_887">2, 0, 2, 0</column>
<column name="i_i_reg_331">2, 0, 2, 0</column>
<column name="i_reg_969">2, 0, 2, 0</column>
<column name="layerResult_V_gep_i_reg_365">26, 0, 26, 0</column>
<column name="layerResult_V_load_reg_994">26, 0, 26, 0</column>
<column name="layerWeigth_V_load_reg_902">32, 0, 32, 0</column>
<column name="neuronIndex_i_reg_308">2, 0, 2, 0</column>
<column name="neuronIndex_reg_862">2, 0, 2, 0</column>
<column name="outputLayerWeigth_V_1_reg_989">32, 0, 32, 0</column>
<column name="p_Val2_2_reg_999">58, 0, 58, 0</column>
<column name="p_Val2_3_reg_1005">32, 0, 32, 0</column>
<column name="p_Val2_4_reg_319">32, 0, 32, 0</column>
<column name="p_Val2_6_reg_912">64, 0, 64, 0</column>
<column name="p_Val2_7_reg_918">32, 0, 32, 0</column>
<column name="p_Val2_s_reg_342">32, 0, 32, 0</column>
<column name="r_V_2_reg_941">28, 0, 28, 0</column>
<column name="r_V_4_reg_946">60, 0, 60, 0</column>
<column name="r_V_5_reg_1033">60, 0, 60, 0</column>
<column name="r_V_reg_1028">28, 0, 28, 0</column>
<column name="result_V_addr_reg_853">30, 0, 32, 2</column>
<column name="tmp_10_i_reg_937">1, 0, 1, 0</column>
<column name="tmp_11_reg_1043">48, 0, 48, 0</column>
<column name="tmp_13_reg_956">48, 0, 48, 0</column>
<column name="tmp_21_i_reg_1038">12, 0, 12, 0</column>
<column name="tmp_22_i_reg_951">12, 0, 12, 0</column>
<column name="tmp_23_i_reg_879">5, 0, 5, 0</column>
<column name="tmp_3_i_reg_1024">1, 0, 1, 0</column>
<column name="tmp_3_reg_1010">23, 0, 23, 0</column>
<column name="tmp_4_i_reg_933">1, 0, 1, 0</column>
<column name="tmp_8_reg_923">23, 0, 23, 0</column>
<column name="tmp_i_39_reg_1020">1, 0, 1, 0</column>
<column name="tmp_i_reg_867">2, 0, 64, 62</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, Loop_neuronLoop_proc, return value</column>
<column name="bias_V_address0">out, 2, ap_memory, bias_V, array</column>
<column name="bias_V_ce0">out, 1, ap_memory, bias_V, array</column>
<column name="bias_V_q0">in, 32, ap_memory, bias_V, array</column>
<column name="layerWeigth_V_address0">out, 4, ap_memory, layerWeigth_V, array</column>
<column name="layerWeigth_V_ce0">out, 1, ap_memory, layerWeigth_V, array</column>
<column name="layerWeigth_V_q0">in, 32, ap_memory, layerWeigth_V, array</column>
<column name="Ainputs_address0">out, 2, ap_memory, Ainputs, array</column>
<column name="Ainputs_ce0">out, 1, ap_memory, Ainputs, array</column>
<column name="Ainputs_q0">in, 32, ap_memory, Ainputs, array</column>
<column name="outputLayerWeigth_V_address0">out, 2, ap_memory, outputLayerWeigth_V, array</column>
<column name="outputLayerWeigth_V_ce0">out, 1, ap_memory, outputLayerWeigth_V, array</column>
<column name="outputLayerWeigth_V_q0">in, 32, ap_memory, outputLayerWeigth_V, array</column>
<column name="outputLayerBias_V_address0">out, 1, ap_memory, outputLayerBias_V, array</column>
<column name="outputLayerBias_V_ce0">out, 1, ap_memory, outputLayerBias_V, array</column>
<column name="outputLayerBias_V_q0">in, 32, ap_memory, outputLayerBias_V, array</column>
<column name="m_axi_result_V_AWVALID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWREADY">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWADDR">out, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWLEN">out, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWSIZE">out, 3, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWBURST">out, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWLOCK">out, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWCACHE">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWPROT">out, 3, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWQOS">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWREGION">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_AWUSER">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WVALID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WREADY">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WDATA">out, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WSTRB">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WLAST">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_WUSER">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARVALID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARREADY">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARADDR">out, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARID">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARLEN">out, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARSIZE">out, 3, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARBURST">out, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARLOCK">out, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARCACHE">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARPROT">out, 3, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARQOS">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARREGION">out, 4, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_ARUSER">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RVALID">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RREADY">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RDATA">in, 32, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RLAST">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RID">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RUSER">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_RRESP">in, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_BVALID">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_BREADY">out, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_BRESP">in, 2, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_BID">in, 1, m_axi, result_V, pointer</column>
<column name="m_axi_result_V_BUSER">in, 1, m_axi, result_V, pointer</column>
<column name="result_V_offset_dout">in, 32, ap_fifo, result_V_offset, pointer</column>
<column name="result_V_offset_empty_n">in, 1, ap_fifo, result_V_offset, pointer</column>
<column name="result_V_offset_read">out, 1, ap_fifo, result_V_offset, pointer</column>
</table>
</item>
</section>
</profile>
