<profile>

<section name = "Vivado HLS Report for 'TOPANN'" level="0">
<item name = "Date">Sat May 12 21:20:00 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">ANN</item>
<item name = "Solution">DATAFLOW</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z010clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Target clock period (ns)">10.00</item>
<item name = "Clock uncertainty (ns)">1.25</item>
<item name = "Estimated clock period (ns)">8.75</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">83, 91, 71, 79, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="Loop_neuronLoop_proc_U0">Loop_neuronLoop_proc, 70, 78, 70, 78, none</column>
<column name="Loop_memcpy_Ainputs_8_U0">Loop_memcpy_Ainputs_8, 12, 12, 12, 12, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 68</column>
<column name="FIFO">0, -, 5, 44</column>
<column name="Instance">18, 12, 2384, 2881</column>
<column name="Memory">0, -, 64, 2</column>
<column name="Multiplexer">-, -, -, 36</column>
<column name="Register">-, -, 6, -</column>
<specialColumn name="Available">120, 80, 35200, 17600</specialColumn>
<specialColumn name="Utilization (%)">15, 15, 6, 17</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="Loop_memcpy_Ainputs_8_U0">Loop_memcpy_Ainputs_8, 0, 0, 54, 194</column>
<column name="Loop_neuronLoop_proc_U0">Loop_neuronLoop_proc, 6, 12, 874, 1079</column>
<column name="TOPANN_AXILiteS_s_axi_U">TOPANN_AXILiteS_s_axi, 8, 0, 432, 448</column>
<column name="TOPANN_OUTPUTS_m_axi_U">TOPANN_OUTPUTS_m_axi, 2, 0, 512, 580</column>
<column name="TOPANN_p3_m_axi_U">TOPANN_p3_m_axi, 2, 0, 512, 580</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
<column name="Ainputs_U">TOPANN_Ainputs, 0, 64, 2, 3, 32, 2, 192</column>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
<column name="result_V_c_U">0, 5, 44, 1, 32, 32</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="Loop_memcpy_Ainputs_8_U0_ap_ready_count">+, 0, 0, 10, 2, 1</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">+, 0, 0, 10, 2, 1</column>
<column name="Loop_memcpy_Ainputs_8_U0_ap_start">and, 0, 0, 8, 1, 1</column>
<column name="Loop_neuronLoop_proc_U0_ap_start">and, 0, 0, 8, 1, 1</column>
<column name="ap_idle">and, 0, 0, 8, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 8, 1, 1</column>
<column name="ap_sync_Loop_memcpy_Ainputs_8_U0_ap_ready">or, 0, 0, 8, 1, 1</column>
<column name="ap_sync_Loop_neuronLoop_proc_U0_ap_ready">or, 0, 0, 8, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="Loop_memcpy_Ainputs_8_U0_ap_ready_count">9, 2, 2, 4</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">9, 2, 2, 4</column>
<column name="ap_sync_reg_Loop_memcpy_Ainputs_8_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_Loop_neuronLoop_proc_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="Loop_memcpy_Ainputs_8_U0_ap_ready_count">2, 0, 2, 0</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">2, 0, 2, 0</column>
<column name="ap_sync_reg_Loop_memcpy_Ainputs_8_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_Loop_neuronLoop_proc_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_AXILiteS_AWVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWADDR">in, 8, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WDATA">in, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WSTRB">in, 4, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARADDR">in, 8, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RDATA">out, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="m_axi_p3_AWVALID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWREADY">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWADDR">out, 32, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWLEN">out, 8, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWSIZE">out, 3, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWBURST">out, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWLOCK">out, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWCACHE">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWPROT">out, 3, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWQOS">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWREGION">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_AWUSER">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_WVALID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_WREADY">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_WDATA">out, 32, m_axi, p3, pointer</column>
<column name="m_axi_p3_WSTRB">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_WLAST">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_WID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_WUSER">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARVALID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARREADY">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARADDR">out, 32, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARID">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARLEN">out, 8, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARSIZE">out, 3, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARBURST">out, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARLOCK">out, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARCACHE">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARPROT">out, 3, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARQOS">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARREGION">out, 4, m_axi, p3, pointer</column>
<column name="m_axi_p3_ARUSER">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RVALID">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RREADY">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RDATA">in, 32, m_axi, p3, pointer</column>
<column name="m_axi_p3_RLAST">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RID">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RUSER">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_RRESP">in, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_BVALID">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_BREADY">out, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_BRESP">in, 2, m_axi, p3, pointer</column>
<column name="m_axi_p3_BID">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_p3_BUSER">in, 1, m_axi, p3, pointer</column>
<column name="m_axi_OUTPUTS_AWVALID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWREADY">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWADDR">out, 32, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWLEN">out, 8, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWSIZE">out, 3, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWBURST">out, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWLOCK">out, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWCACHE">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWPROT">out, 3, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWQOS">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWREGION">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_AWUSER">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WVALID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WREADY">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WDATA">out, 32, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WSTRB">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WLAST">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_WUSER">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARVALID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARREADY">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARADDR">out, 32, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARID">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARLEN">out, 8, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARSIZE">out, 3, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARBURST">out, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARLOCK">out, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARCACHE">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARPROT">out, 3, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARQOS">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARREGION">out, 4, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_ARUSER">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RVALID">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RREADY">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RDATA">in, 32, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RLAST">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RID">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RUSER">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_RRESP">in, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_BVALID">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_BREADY">out, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_BRESP">in, 2, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_BID">in, 1, m_axi, OUTPUTS, pointer</column>
<column name="m_axi_OUTPUTS_BUSER">in, 1, m_axi, OUTPUTS, pointer</column>
</table>
</item>
</section>

<section name = "Critical Path" level="0">
<item name = "Max Delay">5.96</item>
<item name = "Critical Path Table"><table name="Critical Path Table" hasTotal="0">
<keys size="15">Name, Operator, Delay, Accumulated Delay, Store Source, Resource, Core, Interface, Type, Port, Array, Scope, Pointer, Callee, Phi Node</keys>
<column name="'Ainputs'">alloca, 2.32, 2.32, -, -, -, -, -, -, -, -, -, -, -</column>
<column name="">call, 3.63, 5.96, -, -, -, -, -, -, -, -, -, Loop_memcpy.Ainputs.8, -</column>
</table>
</item>
</section>
</profile>
