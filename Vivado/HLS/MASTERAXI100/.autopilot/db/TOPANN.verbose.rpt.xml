<profile>

<section name = "Vivado HLS Report for 'TOPANN'" level="0">
<item name = "Date">Wed May  9 22:59:25 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">ANN</item>
<item name = "Solution">MASTERAXI100</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z010clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.75, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">36, 38, 24, 26, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
<column name="Loop_neuronLoop_proc_U0">Loop_neuronLoop_proc, 23, 25, 23, 25, none</column>
<column name="Loop_memcpy_Ainputs_7_U0">Loop_memcpy_Ainputs_7, 12, 12, 12, 12, none</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 124</column>
<column name="FIFO">0, -, 20, 176</column>
<column name="Instance">44, 24, 4811, 4547</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 63</column>
<column name="Register">-, -, 9, -</column>
<specialColumn name="Available">120, 80, 35200, 17600</specialColumn>
<specialColumn name="Utilization (%)">36, 30, 13, 27</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="Loop_memcpy_Ainputs_7_U0">Loop_memcpy_Ainputs_7, 0, 0, 150, 361</column>
<column name="Loop_neuronLoop_proc_U0">Loop_neuronLoop_proc, 8, 24, 2245, 1738</column>
<column name="TOPANN_AXILiteS_s_axi_U">TOPANN_AXILiteS_s_axi, 32, 0, 1392, 1288</column>
<column name="TOPANN_Inputs_m_axi_U">TOPANN_Inputs_m_axi, 2, 0, 512, 580</column>
<column name="TOPANN_Output_r_m_axi_U">TOPANN_Output_r_m_axi, 2, 0, 512, 580</column>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
<column name="Ainputs_0_loc_chann_U">0, 5, 44, 2, 32, 64</column>
<column name="Ainputs_1_loc_chann_U">0, 5, 44, 2, 32, 64</column>
<column name="Ainputs_2_loc_chann_U">0, 5, 44, 2, 32, 64</column>
<column name="result_V_c_U">0, 5, 44, 1, 32, 32</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="Loop_memcpy_Ainputs_7_U0_ap_ready_count">+, 0, 0, 10, 2, 1</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">+, 0, 0, 10, 2, 1</column>
<column name="Loop_memcpy_Ainputs_7_U0_ap_continue">and, 0, 0, 8, 1, 1</column>
<column name="Loop_memcpy_Ainputs_7_U0_ap_start">and, 0, 0, 8, 1, 1</column>
<column name="Loop_neuronLoop_proc_U0_ap_start">and, 0, 0, 8, 1, 1</column>
<column name="ap_channel_done_Ainputs_0_loc_chann">and, 0, 0, 8, 1, 1</column>
<column name="ap_channel_done_Ainputs_1_loc_chann">and, 0, 0, 8, 1, 1</column>
<column name="ap_channel_done_Ainputs_2_loc_chann">and, 0, 0, 8, 1, 1</column>
<column name="ap_idle">and, 0, 0, 8, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 8, 1, 1</column>
<column name="ap_sync_Loop_memcpy_Ainputs_7_U0_ap_ready">or, 0, 0, 8, 1, 1</column>
<column name="ap_sync_Loop_neuronLoop_proc_U0_ap_ready">or, 0, 0, 8, 1, 1</column>
<column name="ap_sync_channel_write_Ainputs_0_loc_chann">or, 0, 0, 8, 1, 1</column>
<column name="ap_sync_channel_write_Ainputs_1_loc_chann">or, 0, 0, 8, 1, 1</column>
<column name="ap_sync_channel_write_Ainputs_2_loc_chann">or, 0, 0, 8, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="Loop_memcpy_Ainputs_7_U0_ap_ready_count">9, 2, 2, 4</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">9, 2, 2, 4</column>
<column name="ap_sync_reg_Loop_memcpy_Ainputs_7_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_Loop_neuronLoop_proc_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_channel_write_Ainputs_0_loc_chann">9, 2, 1, 2</column>
<column name="ap_sync_reg_channel_write_Ainputs_1_loc_chann">9, 2, 1, 2</column>
<column name="ap_sync_reg_channel_write_Ainputs_2_loc_chann">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="Loop_memcpy_Ainputs_7_U0_ap_ready_count">2, 0, 2, 0</column>
<column name="Loop_neuronLoop_proc_U0_ap_ready_count">2, 0, 2, 0</column>
<column name="ap_sync_reg_Loop_memcpy_Ainputs_7_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_Loop_neuronLoop_proc_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_channel_write_Ainputs_0_loc_chann">1, 0, 1, 0</column>
<column name="ap_sync_reg_channel_write_Ainputs_1_loc_chann">1, 0, 1, 0</column>
<column name="ap_sync_reg_channel_write_Ainputs_2_loc_chann">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="s_axi_AXILiteS_AWVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_AWADDR">in, 8, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WDATA">in, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_WSTRB">in, 4, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARVALID">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARREADY">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_ARADDR">in, 8, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RDATA">out, 32, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_RRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BVALID">out, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BREADY">in, 1, s_axi, AXILiteS, scalar</column>
<column name="s_axi_AXILiteS_BRESP">out, 2, s_axi, AXILiteS, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="ap_rst_n">in, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="interrupt">out, 1, ap_ctrl_hs, TOPANN, return value</column>
<column name="m_axi_Inputs_AWVALID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWREADY">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWADDR">out, 32, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWLEN">out, 8, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWSIZE">out, 3, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWBURST">out, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWLOCK">out, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWCACHE">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWPROT">out, 3, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWQOS">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWREGION">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_AWUSER">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WVALID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WREADY">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WDATA">out, 32, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WSTRB">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WLAST">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_WUSER">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARVALID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARREADY">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARADDR">out, 32, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARID">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARLEN">out, 8, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARSIZE">out, 3, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARBURST">out, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARLOCK">out, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARCACHE">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARPROT">out, 3, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARQOS">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARREGION">out, 4, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_ARUSER">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RVALID">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RREADY">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RDATA">in, 32, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RLAST">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RID">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RUSER">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_RRESP">in, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_BVALID">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_BREADY">out, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_BRESP">in, 2, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_BID">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Inputs_BUSER">in, 1, m_axi, Inputs, pointer</column>
<column name="m_axi_Output_r_AWVALID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWREADY">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWADDR">out, 32, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWLEN">out, 8, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWSIZE">out, 3, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWBURST">out, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWLOCK">out, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWCACHE">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWPROT">out, 3, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWQOS">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWREGION">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_AWUSER">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WVALID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WREADY">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WDATA">out, 32, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WSTRB">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WLAST">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_WUSER">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARVALID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARREADY">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARADDR">out, 32, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARID">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARLEN">out, 8, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARSIZE">out, 3, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARBURST">out, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARLOCK">out, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARCACHE">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARPROT">out, 3, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARQOS">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARREGION">out, 4, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_ARUSER">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RVALID">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RREADY">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RDATA">in, 32, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RLAST">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RID">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RUSER">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_RRESP">in, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_BVALID">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_BREADY">out, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_BRESP">in, 2, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_BID">in, 1, m_axi, Output_r, pointer</column>
<column name="m_axi_Output_r_BUSER">in, 1, m_axi, Output_r, pointer</column>
</table>
</item>
</section>
</profile>
