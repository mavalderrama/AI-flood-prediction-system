// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef XTOPANN_H
#define XTOPANN_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#ifndef __linux__
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#else
#include <stdint.h>
#include <assert.h>
#include <dirent.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/mman.h>
#include <unistd.h>
#include <stddef.h>
#endif
#include "xtopann_hw.h"

/**************************** Type Definitions ******************************/
#ifdef __linux__
typedef uint8_t u8;
typedef uint16_t u16;
typedef uint32_t u32;
#else
typedef struct {
    u16 DeviceId;
    u32 Axilites_BaseAddress;
} XTopann_Config;
#endif

typedef struct {
    u32 Axilites_BaseAddress;
    u32 IsReady;
} XTopann;

/***************** Macros (Inline Functions) Definitions *********************/
#ifndef __linux__
#define XTopann_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))
#define XTopann_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))
#else
#define XTopann_WriteReg(BaseAddress, RegOffset, Data) \
    *(volatile u32*)((BaseAddress) + (RegOffset)) = (u32)(Data)
#define XTopann_ReadReg(BaseAddress, RegOffset) \
    *(volatile u32*)((BaseAddress) + (RegOffset))

#define Xil_AssertVoid(expr)    assert(expr)
#define Xil_AssertNonvoid(expr) assert(expr)

#define XST_SUCCESS             0
#define XST_DEVICE_NOT_FOUND    2
#define XST_OPEN_DEVICE_FAILED  3
#define XIL_COMPONENT_IS_READY  1
#endif

/************************** Function Prototypes *****************************/
#ifndef __linux__
int XTopann_Initialize(XTopann *InstancePtr, u16 DeviceId);
XTopann_Config* XTopann_LookupConfig(u16 DeviceId);
int XTopann_CfgInitialize(XTopann *InstancePtr, XTopann_Config *ConfigPtr);
#else
int XTopann_Initialize(XTopann *InstancePtr, const char* InstanceName);
int XTopann_Release(XTopann *InstancePtr);
#endif

void XTopann_Start(XTopann *InstancePtr);
u32 XTopann_IsDone(XTopann *InstancePtr);
u32 XTopann_IsIdle(XTopann *InstancePtr);
u32 XTopann_IsReady(XTopann *InstancePtr);
void XTopann_EnableAutoRestart(XTopann *InstancePtr);
void XTopann_DisableAutoRestart(XTopann *InstancePtr);

void XTopann_Set_inputs_V(XTopann *InstancePtr, u32 Data);
u32 XTopann_Get_inputs_V(XTopann *InstancePtr);
void XTopann_Set_result_V(XTopann *InstancePtr, u32 Data);
u32 XTopann_Get_result_V(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_0_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_0_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_0_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_0_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_0_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_0_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_0_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_0_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_0_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_0_1_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_1_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_1_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_1_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_1_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_0_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_0_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_0_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_0_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_0_2_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_2_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_2_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_2_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_0_2_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_0_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_0_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_0_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_0_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_1_0_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_0_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_0_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_0_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_0_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_1_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_1_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_1_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_1_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_1_1_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_1_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_1_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_1_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_1_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_1_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_1_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_1_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_1_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_1_2_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_2_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_2_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_2_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_1_2_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_1_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_1_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_1_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_1_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_2_0_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_0_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_0_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_0_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_0_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_2_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_2_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_2_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_2_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_2_1_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_1_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_1_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_1_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_1_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_2_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_2_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_2_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_2_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_layerWeigth_2_2_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_2_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_2_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_2_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_layerWeigth_2_2_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_layerWeigth_2_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_layerWeigth_2_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_layerWeigth_2_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_layerWeigth_2_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_bias_0_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_0_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_0_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_bias_0_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_bias_0_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_bias_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_bias_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_bias_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_bias_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_bias_1_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_1_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_1_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_bias_1_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_bias_1_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_bias_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_bias_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_bias_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_bias_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_bias_2_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_2_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_bias_2_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_bias_2_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_bias_2_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_bias_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_bias_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_bias_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_bias_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_outputLayerWeigth_0_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_0_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_0_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_0_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_0_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_outputLayerWeigth_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_outputLayerWeigth_0_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_outputLayerWeigth_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_outputLayerWeigth_0_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_outputLayerWeigth_1_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_1_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_1_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_1_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_1_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_outputLayerWeigth_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_outputLayerWeigth_1_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_outputLayerWeigth_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_outputLayerWeigth_1_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_outputLayerWeigth_2_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_2_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_2_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_2_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerWeigth_2_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_outputLayerWeigth_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_outputLayerWeigth_2_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_outputLayerWeigth_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_outputLayerWeigth_2_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Get_outputLayerBias_V_BaseAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerBias_V_HighAddress(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerBias_V_TotalBytes(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerBias_V_BitWidth(XTopann *InstancePtr);
u32 XTopann_Get_outputLayerBias_V_Depth(XTopann *InstancePtr);
u32 XTopann_Write_outputLayerBias_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Read_outputLayerBias_V_Words(XTopann *InstancePtr, int offset, int *data, int length);
u32 XTopann_Write_outputLayerBias_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);
u32 XTopann_Read_outputLayerBias_V_Bytes(XTopann *InstancePtr, int offset, char *data, int length);

void XTopann_InterruptGlobalEnable(XTopann *InstancePtr);
void XTopann_InterruptGlobalDisable(XTopann *InstancePtr);
void XTopann_InterruptEnable(XTopann *InstancePtr, u32 Mask);
void XTopann_InterruptDisable(XTopann *InstancePtr, u32 Mask);
void XTopann_InterruptClear(XTopann *InstancePtr, u32 Mask);
u32 XTopann_InterruptGetEnabled(XTopann *InstancePtr);
u32 XTopann_InterruptGetStatus(XTopann *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
